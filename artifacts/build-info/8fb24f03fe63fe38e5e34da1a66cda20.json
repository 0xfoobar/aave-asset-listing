{
  "id": "8fb24f03fe63fe38e5e34da1a66cda20",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.5",
  "solcLongVersion": "0.7.5+commit.eb77ed08",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/assetListing/interfaces/IAaveGovernanceV2.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.7.5;\npragma abicoder v2;\n\n// simplified interface to expose functions\ninterface IAaveGovernanceV2 {\n  /**\n   * @dev Creates a Proposal (needs Proposition Power of creator > Threshold)\n   * @param executor The ExecutorWithTimelock contract that will execute the proposal\n   * @param targets list of contracts called by proposal's associated transactions\n   * @param values list of value in wei for each propoposal's associated transaction\n   * @param signatures list of function signatures (can be empty) to be used when created the callData\n   * @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments\n   * @param withDelegatecalls if true, transaction delegatecalls the taget, else calls the target\n   * @param ipfsHash IPFS hash of the proposal\n   **/\n  function create(\n    address executor,\n    address[] memory targets,\n    uint256[] memory values,\n    string[] memory signatures,\n    bytes[] memory calldatas,\n    bool[] memory withDelegatecalls,\n    bytes32 ipfsHash\n  ) external returns (uint256);\n\n  /**\n   * @dev Cancels a Proposal,\n   * either at anytime by guardian\n   * or when proposal is Pending/Active and threshold no longer reached\n   * @param proposalId id of the proposal\n   **/\n  function cancel(uint256 proposalId) external;\n\n  /**\n   * @dev Queue the proposal (If Proposal Succeeded)\n   * @param proposalId id of the proposal to queue\n   **/\n  function queue(uint256 proposalId) external;\n\n  /**\n   * @dev Execute the proposal (If Proposal Queued)\n   * @param proposalId id of the proposal to execute\n   **/\n  function execute(uint256 proposalId) external payable;\n\n  /**\n   * @dev Function allowing msg.sender to vote for/against a proposal\n   * @param proposalId id of the proposal\n   * @param support boolean, true = vote for, false = vote against\n   **/\n  function submitVote(uint256 proposalId, bool support) external;\n\n  /**\n   * @dev Function to register the vote of user that has voted offchain via signature\n   * @param proposalId id of the proposal\n   * @param support boolean, true = vote for, false = vote against\n   * @param v v part of the voter signature\n   * @param r r part of the voter signature\n   * @param s s part of the voter signature\n   **/\n  function submitVoteBySignature(\n    uint256 proposalId,\n    bool support,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external;\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "istanbul",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/assetListing/interfaces/IAaveGovernanceV2.sol": {
        "IAaveGovernanceV2": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "cancel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "executor",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bool[]",
                  "name": "withDelegatecalls",
                  "type": "bool[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "ipfsHash",
                  "type": "bytes32"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "execute",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "queue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "support",
                  "type": "bool"
                }
              ],
              "name": "submitVote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "support",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "submitVoteBySignature",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "cancel(uint256)": {
                "details": "Cancels a Proposal, either at anytime by guardian or when proposal is Pending/Active and threshold no longer reached",
                "params": {
                  "proposalId": "id of the proposal*"
                }
              },
              "create(address,address[],uint256[],string[],bytes[],bool[],bytes32)": {
                "details": "Creates a Proposal (needs Proposition Power of creator > Threshold)",
                "params": {
                  "calldatas": "list of calldatas: if associated signature empty, calldata ready, else calldata is arguments",
                  "executor": "The ExecutorWithTimelock contract that will execute the proposal",
                  "ipfsHash": "IPFS hash of the proposal*",
                  "signatures": "list of function signatures (can be empty) to be used when created the callData",
                  "targets": "list of contracts called by proposal's associated transactions",
                  "values": "list of value in wei for each propoposal's associated transaction",
                  "withDelegatecalls": "if true, transaction delegatecalls the taget, else calls the target"
                }
              },
              "execute(uint256)": {
                "details": "Execute the proposal (If Proposal Queued)",
                "params": {
                  "proposalId": "id of the proposal to execute*"
                }
              },
              "queue(uint256)": {
                "details": "Queue the proposal (If Proposal Succeeded)",
                "params": {
                  "proposalId": "id of the proposal to queue*"
                }
              },
              "submitVote(uint256,bool)": {
                "details": "Function allowing msg.sender to vote for/against a proposal",
                "params": {
                  "proposalId": "id of the proposal",
                  "support": "boolean, true = vote for, false = vote against*"
                }
              },
              "submitVoteBySignature(uint256,bool,uint8,bytes32,bytes32)": {
                "details": "Function to register the vote of user that has voted offchain via signature",
                "params": {
                  "proposalId": "id of the proposal",
                  "r": "r part of the voter signature",
                  "s": "s part of the voter signature*",
                  "support": "boolean, true = vote for, false = vote against",
                  "v": "v part of the voter signature"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "cancel(uint256)": "40e58ee5",
              "create(address,address[],uint256[],string[],bytes[],bool[],bytes32)": "f8741a9c",
              "execute(uint256)": "fe0d94c1",
              "queue(uint256)": "ddf0b009",
              "submitVote(uint256,bool)": "612c56fa",
              "submitVoteBySignature(uint256,bool,uint8,bytes32,bytes32)": "af1e0bd3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"withDelegatecalls\",\"type\":\"bool[]\"},{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"submitVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"submitVoteBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancel(uint256)\":{\"details\":\"Cancels a Proposal, either at anytime by guardian or when proposal is Pending/Active and threshold no longer reached\",\"params\":{\"proposalId\":\"id of the proposal*\"}},\"create(address,address[],uint256[],string[],bytes[],bool[],bytes32)\":{\"details\":\"Creates a Proposal (needs Proposition Power of creator > Threshold)\",\"params\":{\"calldatas\":\"list of calldatas: if associated signature empty, calldata ready, else calldata is arguments\",\"executor\":\"The ExecutorWithTimelock contract that will execute the proposal\",\"ipfsHash\":\"IPFS hash of the proposal*\",\"signatures\":\"list of function signatures (can be empty) to be used when created the callData\",\"targets\":\"list of contracts called by proposal's associated transactions\",\"values\":\"list of value in wei for each propoposal's associated transaction\",\"withDelegatecalls\":\"if true, transaction delegatecalls the taget, else calls the target\"}},\"execute(uint256)\":{\"details\":\"Execute the proposal (If Proposal Queued)\",\"params\":{\"proposalId\":\"id of the proposal to execute*\"}},\"queue(uint256)\":{\"details\":\"Queue the proposal (If Proposal Succeeded)\",\"params\":{\"proposalId\":\"id of the proposal to queue*\"}},\"submitVote(uint256,bool)\":{\"details\":\"Function allowing msg.sender to vote for/against a proposal\",\"params\":{\"proposalId\":\"id of the proposal\",\"support\":\"boolean, true = vote for, false = vote against*\"}},\"submitVoteBySignature(uint256,bool,uint8,bytes32,bytes32)\":{\"details\":\"Function to register the vote of user that has voted offchain via signature\",\"params\":{\"proposalId\":\"id of the proposal\",\"r\":\"r part of the voter signature\",\"s\":\"s part of the voter signature*\",\"support\":\"boolean, true = vote for, false = vote against\",\"v\":\"v part of the voter signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/assetListing/interfaces/IAaveGovernanceV2.sol\":\"IAaveGovernanceV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/assetListing/interfaces/IAaveGovernanceV2.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.7.5;\\npragma abicoder v2;\\n\\n// simplified interface to expose functions\\ninterface IAaveGovernanceV2 {\\n  /**\\n   * @dev Creates a Proposal (needs Proposition Power of creator > Threshold)\\n   * @param executor The ExecutorWithTimelock contract that will execute the proposal\\n   * @param targets list of contracts called by proposal's associated transactions\\n   * @param values list of value in wei for each propoposal's associated transaction\\n   * @param signatures list of function signatures (can be empty) to be used when created the callData\\n   * @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments\\n   * @param withDelegatecalls if true, transaction delegatecalls the taget, else calls the target\\n   * @param ipfsHash IPFS hash of the proposal\\n   **/\\n  function create(\\n    address executor,\\n    address[] memory targets,\\n    uint256[] memory values,\\n    string[] memory signatures,\\n    bytes[] memory calldatas,\\n    bool[] memory withDelegatecalls,\\n    bytes32 ipfsHash\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Cancels a Proposal,\\n   * either at anytime by guardian\\n   * or when proposal is Pending/Active and threshold no longer reached\\n   * @param proposalId id of the proposal\\n   **/\\n  function cancel(uint256 proposalId) external;\\n\\n  /**\\n   * @dev Queue the proposal (If Proposal Succeeded)\\n   * @param proposalId id of the proposal to queue\\n   **/\\n  function queue(uint256 proposalId) external;\\n\\n  /**\\n   * @dev Execute the proposal (If Proposal Queued)\\n   * @param proposalId id of the proposal to execute\\n   **/\\n  function execute(uint256 proposalId) external payable;\\n\\n  /**\\n   * @dev Function allowing msg.sender to vote for/against a proposal\\n   * @param proposalId id of the proposal\\n   * @param support boolean, true = vote for, false = vote against\\n   **/\\n  function submitVote(uint256 proposalId, bool support) external;\\n\\n  /**\\n   * @dev Function to register the vote of user that has voted offchain via signature\\n   * @param proposalId id of the proposal\\n   * @param support boolean, true = vote for, false = vote against\\n   * @param v v part of the voter signature\\n   * @param r r part of the voter signature\\n   * @param s s part of the voter signature\\n   **/\\n  function submitVoteBySignature(\\n    uint256 proposalId,\\n    bool support,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external;\\n}\\n\",\"keccak256\":\"0x6adbfca829b5bf7328b8602df2f5ffedb0471b9136c59e8b1cb7148e42c86e87\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/assetListing/interfaces/IAaveGovernanceV2.sol": {
        "ast": {
          "absolutePath": "contracts/assetListing/interfaces/IAaveGovernanceV2.sol",
          "exportedSymbols": {
            "IAaveGovernanceV2": [
              68
            ]
          },
          "id": 69,
          "license": "AGPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:22:0"
            },
            {
              "id": 2,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "60:19:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 68,
              "linearizedBaseContracts": [
                68
              ],
              "name": "IAaveGovernanceV2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "157:705:0",
                    "text": " @dev Creates a Proposal (needs Proposition Power of creator > Threshold)\n @param executor The ExecutorWithTimelock contract that will execute the proposal\n @param targets list of contracts called by proposal's associated transactions\n @param values list of value in wei for each propoposal's associated transaction\n @param signatures list of function signatures (can be empty) to be used when created the callData\n @param calldatas list of calldatas: if associated signature empty, calldata ready, else calldata is arguments\n @param withDelegatecalls if true, transaction delegatecalls the taget, else calls the target\n @param ipfsHash IPFS hash of the proposal*"
                  },
                  "functionSelector": "f8741a9c",
                  "id": 27,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "create",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "executor",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "886:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "886:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "targets",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "908:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 6,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "908:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 7,
                          "nodeType": "ArrayTypeName",
                          "src": "908:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "values",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "938:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 9,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "938:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 10,
                          "nodeType": "ArrayTypeName",
                          "src": "938:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "signatures",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "967:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 12,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "967:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 13,
                          "nodeType": "ArrayTypeName",
                          "src": "967:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "calldatas",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "999:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "999:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 16,
                          "nodeType": "ArrayTypeName",
                          "src": "999:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "withDelegatecalls",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "1029:31:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 18,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1029:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 19,
                          "nodeType": "ArrayTypeName",
                          "src": "1029:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "ipfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "1066:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1066:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "880:206:0"
                  },
                  "returnParameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 27,
                        "src": "1105:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1105:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1104:9:0"
                  },
                  "scope": 68,
                  "src": "865:249:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 28,
                    "nodeType": "StructuredDocumentation",
                    "src": "1118:189:0",
                    "text": " @dev Cancels a Proposal,\n either at anytime by guardian\n or when proposal is Pending/Active and threshold no longer reached\n @param proposalId id of the proposal*"
                  },
                  "functionSelector": "40e58ee5",
                  "id": 33,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 33,
                        "src": "1326:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1325:20:0"
                  },
                  "returnParameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1354:0:0"
                  },
                  "scope": 68,
                  "src": "1310:45:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 34,
                    "nodeType": "StructuredDocumentation",
                    "src": "1359:114:0",
                    "text": " @dev Queue the proposal (If Proposal Succeeded)\n @param proposalId id of the proposal to queue*"
                  },
                  "functionSelector": "ddf0b009",
                  "id": 39,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "queue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "1491:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1491:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1490:20:0"
                  },
                  "returnParameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1519:0:0"
                  },
                  "scope": 68,
                  "src": "1476:44:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 40,
                    "nodeType": "StructuredDocumentation",
                    "src": "1524:115:0",
                    "text": " @dev Execute the proposal (If Proposal Queued)\n @param proposalId id of the proposal to execute*"
                  },
                  "functionSelector": "fe0d94c1",
                  "id": 45,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 45,
                        "src": "1659:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1658:20:0"
                  },
                  "returnParameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1695:0:0"
                  },
                  "scope": 68,
                  "src": "1642:54:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 46,
                    "nodeType": "StructuredDocumentation",
                    "src": "1700:189:0",
                    "text": " @dev Function allowing msg.sender to vote for/against a proposal\n @param proposalId id of the proposal\n @param support boolean, true = vote for, false = vote against*"
                  },
                  "functionSelector": "612c56fa",
                  "id": 53,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitVote",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 48,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "1912:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1912:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "support",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "1932:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1932:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1911:34:0"
                  },
                  "returnParameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1954:0:0"
                  },
                  "scope": 68,
                  "src": "1892:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 54,
                    "nodeType": "StructuredDocumentation",
                    "src": "1959:337:0",
                    "text": " @dev Function to register the vote of user that has voted offchain via signature\n @param proposalId id of the proposal\n @param support boolean, true = vote for, false = vote against\n @param v v part of the voter signature\n @param r r part of the voter signature\n @param s s part of the voter signature*"
                  },
                  "functionSelector": "af1e0bd3",
                  "id": 67,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitVoteBySignature",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2335:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2335:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "support",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2359:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2359:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 60,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2377:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2390:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2390:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2405:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2405:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2329:89:0"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2427:0:0"
                  },
                  "scope": 68,
                  "src": "2299:129:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 69,
              "src": "125:2305:0"
            }
          ],
          "src": "37:2394:0"
        },
        "id": 0
      }
    }
  }
}
